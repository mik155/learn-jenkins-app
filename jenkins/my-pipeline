pipeline {
    agent any

    environment {
        NETLIFY_SITE_ID = '0d554619-e4f2-4164-b531-cf2fccde7072'
        NETLIFY_AUTH_TOKEN = credentials('netlify-token')
        REACT_APP_VERSION = "1.1.$BUILD_ID"
    }

    stages {
        stage('Docker') {
            agent any

            steps {
                sh 'echo $PATH'
                sh 'docker build -t my-node -f DockerNode .'
                sh 'docker build -t my-pw -f DockerPw .'
            }
        }

        stage('Build') {
            agent {
                docker {
                    image 'my-node'
                    reuseNode true
                }
            }
            steps {
                sh 'ls -la'
                sh 'node --version'
                sh 'npm --version'
                sh 'npm ci'
                sh 'npm run build'
                sh 'ls -la'
            }
        }

        stage ('Run tests')
        {
            parallel{
                stage('JUNIT Test') {
                    agent {
                        docker {
                            image 'my-node'
                            reuseNode true
                        }
                    }

                    steps {
                        sh 'test -f build/index.html'
                        sh 'npm test'
                    }
                }

                stage('E2E') {
                    agent {
                        docker {
                            image 'my-pw'
                            reuseNode true
                        }
                    }

                    steps {
                        echo "$REACT_APP_VERSION"
                        sh 'node_modules/.bin/serve -s build &'
                        sh 'sleep 10'
                        sh 'npx playwright test --reporter=html'
                        publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'PW HTML Report', reportTitles: '', useWrapperFileDirectly: true])
                    }
                }

            }
        }

        stage ('Deploy DEV') {
            agent {
                docker {
                    image 'my-node'
                    reuseNode true
                }
            }
            steps {
                echo 'Felemele'
                sh 'node_modules/.bin/netlify --version'
                sh 'node_modules/.bin/netlify status'
                sh 'node_modules/.bin/netlify deploy --dir=build'
            }
        }

        stage('Approve') {
            agent any
            steps {
                timeout( time: 1, unit: 'MINUTES') {
                    input 'Deploy ?'
                }
            }
        }

        stage ('Deploy PROD') {
            agent {
                docker {
                    image 'node:latest'
                    reuseNode true
                }
            }
            steps {
                echo 'Felemele'
                sh 'npm install --save-dev netlify-cli node-jq'
                sh 'node_modules/.bin/netlify --version'
                sh 'node_modules/.bin/netlify status'
                sh '''
                    node_modules/.bin/netlify deploy --dir=build --prod --json > result
                '''
                script {
                    env.CI_ENVIRONMENT_URL = sh(script: 'node_modules/.bin/node-jq \'.deploy_url\' ./result | tr -d \'"\'', returnStdout: true)
                    env.PROD_URL = sh(script: 'node_modules/.bin/node-jq \'.deploy_url\' ./result', returnStdout: true)
                }
            }
        }

        stage('PROD E2E') {
            agent {
                docker {
                    image 'my-pw'
                    reuseNode true
                }
            }

            steps {
                echo "CI PROD_URL ${env.CI_ENVIRONMENT_URL}, ${env.PROD_URL}"
                echo "PROD_URL $CI_ENVIRONMENT_URL"
                sh 'sleep 5'
                sh 'npx playwright test --reporter=html'
                publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'PW PROD HTML Report', reportTitles: '', useWrapperFileDirectly: true])
            }
        }

    }
}
